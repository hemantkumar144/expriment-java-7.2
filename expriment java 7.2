import java.sql.*;
import java.util.Scanner;

public class ProductCRUD {
    public static void main(String[] args) {
        // Database connection details
        String url = "jdbc:mysql://localhost:3306/testdb"; // Replace with your DB name
        String user = "root";                              // Replace with your MySQL username
        String password = "password";                      // Replace with your MySQL password

        Connection con = null;
        Scanner sc = new Scanner(System.in);

        try {
            // Step 1: Load JDBC Driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Step 2: Establish Connection
            con = DriverManager.getConnection(url, user, password);
            con.setAutoCommit(false);  // Transaction handling enabled
            System.out.println("✅ Connected to MySQL database successfully!");

            int choice;
            do {
                // Step 3: Display Menu
                System.out.println("\n=== PRODUCT MANAGEMENT SYSTEM ===");
                System.out.println("1. Add Product");
                System.out.println("2. Display All Products");
                System.out.println("3. Update Product");
                System.out.println("4. Delete Product");
                System.out.println("5. Exit");
                System.out.print("Enter your choice: ");
                choice = sc.nextInt();

                switch (choice) {
                    case 1 -> insertProduct(con, sc);
                    case 2 -> displayProducts(con);
                    case 3 -> updateProduct(con, sc);
                    case 4 -> deleteProduct(con, sc);
                    case 5 -> System.out.println("Exiting program...");
                    default -> System.out.println("Invalid choice. Try again.");
                }

            } while (choice != 5);

        } catch (ClassNotFoundException e) {
            System.out.println("❌ JDBC Driver not found.");
            e.printStackTrace();
        } catch (SQLException e) {
            System.out.println("❌ Database error occurred.");
            e.printStackTrace();
        } finally {
            try {
                if (con != null) con.close();
                sc.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    // -------------------- CREATE --------------------
    private static void insertProduct(Connection con, Scanner sc) {
        try {
            System.out.print("Enter Product ID: ");
            int id = sc.nextInt();
            sc.nextLine();  // Consume newline
            System.out.print("Enter Product Name: ");
            String name = sc.nextLine();
            System.out.print("Enter Price: ");
            double price = sc.nextDouble();
            System.out.print("Enter Quantity: ");
            int qty = sc.nextInt();

            String sql = "INSERT INTO Product (ProductID, ProductName, Price, Quantity) VALUES (?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setInt(1, id);
            pst.setString(2, name);
            pst.setDouble(3, price);
            pst.setInt(4, qty);

            int rows = pst.executeUpdate();
            if (rows > 0) {
                con.commit();
                System.out.println("✅ Product added successfully!");
            }
        } catch (SQLException e) {
            try {
                con.rollback();
                System.out.println("❌ Insertion failed! Transaction rolled back.");
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    // -------------------- READ --------------------
    private static void displayProducts(Connection con) {
        try {
            String sql = "SELECT * FROM Product";
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            System.out.println("\n--- PRODUCT LIST ---");
            System.out.printf("%-10s %-20s %-10s %-10s%n", "ID", "Name", "Price", "Quantity");
            System.out.println("------------------------------------------------------");
            while (rs.next()) {
                System.out.printf("%-10d %-20s %-10.2f %-10d%n",
                        rs.getInt("ProductID"),
                        rs.getString("ProductName"),
                        rs.getDouble("Price"),
                        rs.getInt("Quantity"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // -------------------- UPDATE --------------------
    private static void updateProduct(Connection con, Scanner sc) {
        try {
            System.out.print("Enter Product ID to update: ");
            int id = sc.nextInt();
            sc.nextLine();  // Consume newline
            System.out.print("Enter New Product Name: ");
            String name = sc.nextLine();
            System.out.print("Enter New Price: ");
            double price = sc.nextDouble();
            System.out.print("Enter New Quantity: ");
            int qty = sc.nextInt();

            String sql = "UPDATE Product SET ProductName=?, Price=?, Quantity=? WHERE ProductID=?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, name);
            pst.setDouble(2, price);
            pst.setInt(3, qty);
            pst.setInt(4, id);

            int rows = pst.executeUpdate();
            if (rows > 0) {
                con.commit();
                System.out.println("✅ Product updated successfully!");
            } else {
                System.out.println("⚠️ No product found with that ID.");
            }

        } catch (SQLException e) {
            try {
                con.rollback();
                System.out.println("❌ Update failed! Transaction rolled back.");
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    // -------------------- DELETE --------------------
    private static void deleteProduct(Connection con, Scanner sc) {
        try {
            System.out.print("Enter Product ID to delete: ");
            int id = sc.nextInt();

            String sql = "DELETE FROM Product WHERE ProductID=?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setInt(1, id);

            int rows = pst.executeUpdate();
            if (rows > 0) {
                con.commit();
                System.out.println("✅ Product deleted successfully!");
            } else {
                System.out.println("⚠️ No product found with that ID.");
            }

        } catch (SQLException e) {
            try {
                con.rollback();
                System.out.println("❌ Deletion failed! Transaction rolled back.");
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
}
